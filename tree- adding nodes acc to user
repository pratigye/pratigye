#include<stdio.h>
#include<stdlib.h>

struct node {
    int data;
    struct node *rchild;
    struct node *lchild;
};

struct node *create()
{
    int x, z, num;
    char choice;
    struct node *A;
    printf("Enter value of first node: \n");
    scanf("%d", &x);
    A = (struct node *)malloc(sizeof(struct node));
    A->rchild = NULL;
    A->data = x;
    A->lchild = NULL;
    printf("Enter how many nodes you want to store in tree: \n");
    scanf("%d", &num);
    struct node *B;
    struct node *C = A;
    for (int i = 1; i < num; i++)
    {
        printf("\nEnter where you want to add new node ('r' for 'right' or 'l' for 'left'):\n");
        scanf(" %c", &choice);
        printf("Enter value of node: \n");
        scanf("%d", &z);
        B = (struct node *)malloc(sizeof(struct node));
        B->data = z;
        B->rchild = NULL;
        B->lchild = NULL;
        if (choice == 'r')
        {
            C->rchild = B;
            printf("\nWhere you want to install new node..(on current press 'c' of head press 'h'):\n");
            scanf(" %c", &choice);
            if (choice == 'c')
                C = B;
            else
                C = A;
        }
        else if (choice == 'l')
        {
            C->lchild = B;
            printf("\nWhere you want to install new node..(on current press 'c' of head press 'h'):\n");
            scanf(" %c", &choice);
            if (choice == 'c')
                C = B;
            else
                C = A;
        }
        else
        {
            printf("\nInvalid choice...\n");
            free(B);
            i--;
        }
    }
    return A;
}

int main ()
{
    struct node *root = create();
    return 0;
}
